name: Test Electron Build

on:
  workflow_dispatch:
  push:
    branches:
      - test-ci

jobs:
  build:
    runs-on: ${{ matrix.os }}  # 使用 matrix 中的 os 配置来指定不同的运行环境

    strategy:
      matrix:
        include:
          # - platform: win
          #   os: windows-latest

          - platform: linux
            os: ubuntu-latest

          # - platform: mac
          #   os: macos-11

          # - platform: mac
          #   os: macos-12

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install pnpm
        run: |
          npm install -g pnpm

      - name: Install frontend dependencies and build # vue 构建
        run: |
          pnpm install
          pnpm run build-only
        working-directory: ./frontend

      - name: Set up Python environment  # 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install backend Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ./backend

      - name: Build Python backend for ${{ matrix.platform }}
        run: |
          python pyi_auto_pack_ci.py ${{ matrix.platform }}
        working-directory: ./backend

      - name: Modify package.json for platform-specific resources
        run: |
          if [ "${{ matrix.platform }}" == "win" ]; then
            BACKEND_PATH="../backend/dist/windows/*"
          elif [ "${{ matrix.platform }}" == "linux" ]; then
            BACKEND_PATH="../backend/dist/linux/*"
          elif [ "${{ matrix.platform }}" == "mac" ]; then
            BACKEND_PATH="../backend/dist/mac/*"
          fi

          node -e "
          const fs = require('fs');
          const packageJson = JSON.parse(fs.readFileSync('./frontend/package.json', 'utf8'));
          packageJson.build.extraResources = [
            { from: BACKEND_PATH, to: 'APIDataDir' },
            { from: '../config/', to: 'config', filter: ['*.yaml'] }
          ];
          fs.writeFileSync('./frontend/package.json', JSON.stringify(packageJson, null, 2));
          "

      - name: Build Electron app for ${{ matrix.platform }}
        shell: bash      
        run: |
          echo "Building Electron app for ${{ matrix.platform }} on ${{ matrix.os }}"
          if [ "${{ matrix.platform }}" == "win" ]; then
            pnpm electron-builder --win
          elif [ "${{ matrix.platform }}" == "mac" ]; then
            if [ "${{ matrix.os }}" == "macos-11" ]; then
              pnpm electron-builder --mac --x64  # 针对 x86_64
            elif [ "${{ matrix.os }}" == "macos-12" ]; then
              pnpm electron-builder --mac --arm64  # 针对 arm64
            fi
          elif [ "${{ matrix.platform }}" == "linux" ]; then
            pnpm electron-builder --linux
          fi
        working-directory: ./frontend

      - name: Upload build artifacts for ${{ matrix.platform }} on ${{ matrix.os }}
        uses: actions/upload-artifact@v4
        with:
          name: electron-build-${{ matrix.platform }}-${{ matrix.os }}
          path: |
            ./frontend/build/*.exe
            ./frontend/build/*.zip
            ./backend/dist/