name: Post-build Release

on:
  workflow_dispatch:

  workflow_run:
    workflows: ["Electron Build"]
    types:
      - completed

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download Linux Artifact
      uses: actions/download-artifact@v4
      with:
        name: electron-build-linux-ubuntu-latest
        path: ./build

    - name: Download Windows Artifact
      uses: actions/download-artifact@v4
      with:
        name: electron-build-win-windows-latest
        path: ./build

    - name: Unzip artifacts and combine
      run: |
        mkdir -p final
        # 解压所有 zip 文件到 final 目录
        find ./build -name "*.zip" -exec unzip {} -d final \;

    - name: Retrieve Versions
      id: get_versions
      run: |
        API_VERSION=$(grep 'Version\s*=\s*"v' backend/Configs.py | sed -E 's/.*Version\s*=\s*"v([^"]+)".*/\1/')
        ELE_VERSION=$(grep -A 5 'class Electron:' backend/Configs.py | grep 'Version\s*=' | sed -E 's/.*=\s*"([^"]+)".*/\1/')
        export API_VERSION
        export ELE_VERSION

        echo "API_VERSION=$API_VERSION" >> $GITHUB_ENV
        echo "ELE_VERSION=$ELE_VERSION" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        # 使用临时tag，稍后在GitHub中手动编辑
        tag_name: "temp-draft-tag"
        release_name: "Electron v${{ env.ELE_VERSION }}, Django API v${{ env.API_VERSION }}"
        body: ""
        draft: true
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Upload all files in final directory
      run: |
        for file in ./final/*; do
          echo "Uploading $file..."
          curl \
            -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"$file" \
            "${{ steps.create_release.outputs.upload_url }}?name=$(basename "$file")"
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
